(defpoll BATPERC :interval "1m" `scripts/battery.sh`)
(defpoll WEATHER :interval "1m" `scripts/weather.sh`)

(deflisten workspace "scripts/workspaces.sh")
(deflisten dnd "swaync-client -s")

; found at https://github.com/owenrumney/eww-bar/blob/master/revealer.yuck
(defwidget revealer-on-hover [var varname ?class ?duration ?transition]
  (box :class "${class} revealer-on-hover"
       :orientation "h"
       :space-evenly false
    (eventbox :class "eventbox"
              :onhover "eww update ${varname}=true"
              :onhoverlost "eww update ${varname}=false"
      (box :space-evenly false
        (children :nth 0)
        (revealer :reveal var
                  :transition {transition ?: "slideright"}
                  :duration {duration ?: "500ms"}
          (children :nth 1))
        (box :class "${class}" (children :nth 2))))))

(defwidget topbar []
  (centerbox :orientation "h" :class "bar"
    (box :orientation "h" :space-evenly false (datetime))
    (box :orientation "h" :space-evenly false (workspaces))
    (box :orientation "h" :space-evenly false :halign "end" (status))
  )
)

(defwidget status []
    (box :class "status"
        :orientation "h"
        :space-evenly false
         (notifications)
         (powerbutton)
    )
)

(defwidget notifications []
    (button :class "notifications status-bar"
        :onclick "swaync-client -t -sw"
        (label :text { jq(dnd, '.dnd') == 'false' ? "" :"" })
    )
)

(defwidget powerbutton []
    (box :orientation "h"
        :class "powerbutton status-bar"
        (label :text BATPERC)))

(defpoll time :interval "1s"
    "date '+%a %d %b %H:%M'")

(defwidget datetime []
    (box 
        :space-evenly false
        (box (label :class "datetime status-bar" :text time))
        (box (label :class "weather status-bar" :text { WEATHER ?: "-100 C" }))
    )
)

(defwidget workspaces []
  (eventbox :onscroll "hyprctl dispatch workspace `echo {} | sed 's/up/+/\' | sed 's/down/-/'`1"
    (box :class "workspace-box status-bar"
      (for i in workspace
        (button
          :onclick "swaymsg workspace ${i.name}"
          :class {i.focused ? "workspace-button workspace-active" : "workspace-button" }
          "${i.name}")))))

(defwindow bar
           :monitor 0
           :exclusive true
           :geometry (geometry :x "0%"
                               :y "0px"
                               :width "100%"
                               :height "22px"
                               :anchor "top center")
           :reserve (struts :distance "0px" :side "top")
           (topbar))
